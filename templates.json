[
  {
    "type": "container",
    "title": "Registry",
    "description": "Docker image registry",
    "categories": ["docker"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/registry.png",
    "image": "registry:latest",
    "ports": [
      "5000/tcp"
    ],
    "volumes": ["/var/lib/registry"]
  },
  {
    "type": "container",
    "title": "Gitlab CE",
    "description": "Open-source end-to-end software development platform",
    "note": "Default username is <b>root</b>. Check the <a href=\"https://docs.gitlab.com/omnibus/docker/README.html#after-starting-a-container\" target=\"_blank\">Gitlab documentation</a> to get started.",
    "categories": ["development", "project-management", "vault", "cicd"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/gitlab_ce.png",
    "image": "gitlab/gitlab-ce:latest",
    "env": [
      { "name": "affinity:local.dms.platform", "set": "=x86" },
      { "name": "GITLAB_HOST",
        "label": "full url of instance (ie $PROTO://$HOST/)"
      },
      { "name": "VIRTUAL_HOST",
        "label": "DNS hostname"
      },
      {
        "name": "DOMAIN_CONTROLLER",
        "label": "AD Domain Controller"
      },
      {
        "name": "VIRTUAL_PORT",
        "set": "80"
      },
      {
        "name": "VIRTUAL_PROTO",
        "set": "http"
      },
      {
        "name": "AWS_REGION",
        "label": "Store backups in which AWS Region"
      },
      {
        "name": "AWS_ACCESS_KEY_ID",
        "label": "Access ID for AWS S3"
      },
      {
        "name": "AWS_SECRET_ACCESS_KEY",
        "label": "Access Secret for AWS S3"
      },
      {
        "name": "AWS_S3_BUCKET",
        "label": "AWS S3 location for backup"
      },
      {
        "name": "SERVICE_ACCOUNT",
        "label": "Active Directory Service Account"
      },
      {
        "name": "SERVICE_SECRET",
        "label": "Active Directory Service Secret"
      },
      {
        "name": "GITLAB_OMNIBUS_CONFIG",
        "set": "external_url 'http://gitlab.dms.local'; gitlab_rails['backup_upload_connection'] = {'provider' => 'AWS','region' => ENV['AWS_REGION'], 'aws_access_key_id' => ENV['AWS_ACCESS_KEY_ID'], 'aws_secret_access_key' => ENV['AWS_SECRET_ACCESS_KEY'], 'backup_upload_remote_directory' => ENV['AWS_S3_BUCKET'] }; gitlab_rails['backup_keep_time'] = 604800; gitlab_rails['gitlab_shell_ssh_port'] = 2222; gitlab_rails['ldap_enabled'] = true; gitlab_rails['ldap_servers'] = { 'main' => { 'label' => 'DMS Login', 'host' => ENV['DOMAIN_CONTROLLER'], 'port' => '389',  'uid' => 'sAMAccountName', 'encryption' => 'start_tls',  'verify_certificates' => false, 'bind_dn' => ENV['SERVICE_ACCOUNT'], 'password' => ENV['SERVICE_SECRET'], 'active_directory' => true, 'group_base' => 'OU=Applications,OU=Groups,DC=dms,DC=local', 'block_auto_created_users' => false, 'allow_username_or_email_login' => false, 'lowercase_usernames' => true, 'base' => 'OU=Members,DC=dms,DC=local', 'sync_ssh_keys' => true, 'user_filter' => '(memberOf:1.2.840.113556.1.4.1941:=CN=CICD Users,OU=Applications,OU=Groups,DC=dms,DC=local)' }};"
      },
      {
        "name": "GITLAB_ROOT_PASSWORD",
        "label": "Root Password"
      },
      {
        "name": "OAUTH_ENABLED",
        "set": "true"
      },
      {
        "name": "OAUTH_ALLOW_SSO",
        "set": "true"
      },
      {
        "name": "OAUTH_BLOCK_AUTO_CREATED_USERS",
        "set": "false"
      },
      {
        "name": "OAUTH_AUTO_LINK_LDAP_USER",
        "set": "true"
      },
       {
        "name": "OAUTH_AUTO_LINK_SAML_USER",
        "set": "false"
      }
    ],
    "restart_policy": "on-failure",
    "ports": [
      "443/tcp",
      "22/tcp"
    ],
    "volumes": [
      { "container": "/etc/gitlab" },
      { "container": "/var/log/gitlab" },
      { "container": "/var/opt/gitlab" }
    ],
    "labels": [
      { "name": "local.dms.owner", "value": "infrastructure" },
      { "name": "com.centurylinklabs.watchtower.enable", "value": "true" },
      { "name": "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy", "value": "" },
      { "name": "com.docker.swarm.affinities=["local.dms.platform==x86"] }
    ]
  },
  {
    "type": "container",
    "title": "Minio",
    "description": "A distributed object storage server built for cloud applications and devops",
    "categories": ["storage"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/minio.png",
    "image": "minio/minio:latest",
    "restart_policy": "on-failure",
    "env": [
      { "name": "VIRTUAL_HOST",
        "label": "DNS hostname"
      },
      {
        "name": "VIRTUAL_PORT",
        "set": "9000"
      },
      {
        "name": "VIRTUAL_PROTO",
        "set": "http"
      },
      {
        "name": "MINIO_ACCESS_KEY",
        "label": "Minio access key"
      },
      {
        "name": "MINIO_SECRET_KEY",
        "label": "Minio secret key"
      }
    ],
    "volumes": ["/export", "/root/.minio"],
    "command": "server /export",
    "labels": [
      { "name": "local.dms.owner", "value": "infrastructure" },
      { "name": "com.centurylinklabs.watchtower.enable", "value": "true" },
      { "name": "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy", "value": "" }
    ]
  },
  {
    "type": "stack",
    "title": "Elastic Search",
    "description": "Searching Made Easy",
    "note": "Deploys the API gateway and sample functions. You can access the UI on port 5900.",
    "categories": ["logging"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/openfaas.png",
    "repository": {
      "url": "https://github.com/denzuko/docker-elk/",
      "stackfile": "docker-compose.yml"
    }
  },
  {
    "type": "stack",
    "title": "OpenFaaS",
    "description": "Serverless functions made simple",
    "note": "Deploys the API gateway and sample functions. You can access the UI on port 8080.",
    "categories": ["serverless"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/openfaas.png",
    "repository": {
      "url": "https://github.com/openfaas/faas",
      "stackfile": "docker-compose.yml"
    }
  }
]
